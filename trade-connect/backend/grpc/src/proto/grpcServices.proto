syntax = "proto3";

package chat_main;

service CompanyService {
    rpc InitCompanyInfo(InitCompanyInfoRequest) returns (InitCompanyInfoResponse);
}

service TradeService {
    rpc CreateTrade(CreateTradeRequest) returns (CreateTradeResponse);
    rpc UpdateTradeItems(UpdateTradeItemsRequest) returns (UpdateTradeItemsResponse);
    rpc AcceptTrade(UpdateTradeStatusRequest) returns (UpdateTradeStatusResponse);
    rpc RejectTrade(UpdateTradeStatusRequest) returns (UpdateTradeStatusResponse);
    rpc CancleTrade(UpdateTradeStatusRequest) returns (UpdateTradeStatusResponse);
}

message Trade {
  string id = 1;
  string tradeCreatorAddress = 2;
  repeated string tradeCreatorSwapItems = 3;
  string tradeRecipientAddress = 4;
  repeated string tradeRecipientSwapItems = 5;
  string lastUpdatedBy =6;
  string status = 7;
}

message InitCompanyInfoRequest {
  string companyId = 1;
  string accessKey = 2;
}

message InitCompanyInfoResponse {
  bool success = 1;
}

message CreateTradeRequest {
  string companyId = 1;
  string tradeCreatorAddress = 2;
  repeated string tradeCreatorSwapItems = 3;
  string tradeRecipientAddress = 4;
  repeated string tradeRecipientSwapItems = 5;
}

message CreateTradeResponse {
  bool success = 1;
  string tradeId = 2;
  Trade trade = 3;
}

message UpdateTradeItemsRequest {
  string tradeId = 1;
  string updaterAddress = 2;
  repeated string tradeCreatorSwapItems = 3;
  repeated string tradeRecipientSwapItems = 4;
}

message UpdateTradeItemsResponse {
  bool success = 1;
  string tradeId = 2;
  string otherUserAddress = 3;
  Trade trade = 4;
}

message UpdateTradeStatusRequest {
  string tradeId = 1;
  string updaterAddress = 2;
}

message UpdateTradeStatusResponse {
  bool success = 1;
  string tradeId = 2;
  string otherUserAddress = 3;
  map<string, string> serializedTransactions = 4;
  Trade trade = 5;
}